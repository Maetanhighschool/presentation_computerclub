import streamlit as st
from PIL import Image # 이미지 파일을 로드하기 위해 Pillow 라이브러리 사용

st.set_page_config(layout="wide") # 페이지 레이아웃을 넓게 설정

st.title("웹 페이지 개발의 이해")

# 목차
st.sidebar.title("목차")
st.sidebar.markdown("[1. 웹 페이지 개발 과정](#웹-페이지-개발-과정)")
st.sidebar.markdown("[2. 프론트엔드와 백엔드란?](#프론트엔드와-백엔드란)")
st.sidebar.markdown("[3. 웹 페이지 개발에서 인공지능의 역할](#웹-페이지-개발에서-인공지능의-역할)")

# 1. 웹 페이지 개발 과정
st.header("1. 웹 페이지 개발 과정")
st.image(Image.open("image_introduction.jpg"), use_column_width=True) # 이미지 로드 및 표시
st.markdown("""
웹 페이지 개발은 다음과 같은 체계적인 단계를 거쳐 진행됩니다.

1.  **프로젝트 기획**: 웹사이트의 목표, 대상 사용자, 기능, 콘텐츠 등을 정의하는 단계입니다.
2.  **디자인**: 사용자 인터페이스(UI) 및 사용자 경험(UX)을 설계하는 단계입니다. 와이어프레임, 목업, 프로토타입 등을 제작합니다.
3.  **개발**: 실제로 코드를 작성하여 웹 페이지를 구현하는 단계입니다. 프론트엔드와 백엔드 개발이 이루어집니다.
4.  **테스트**: 개발된 웹 페이지가 정상적으로 작동하는지, 버그는 없는지, 사용성은 좋은지 등을 확인하는 단계입니다.
5.  **배포 및 유지 보수**: 완성된 웹 페이지를 서버에 올려 사용자에게 공개하고, 이후 발생하는 문제점을 해결하고 기능을 업데이트하는 단계입니다.
""")

st.markdown("---") # 구분선

# 2. 프론트엔드와 백엔드란?
st.header("2. 프론트엔드와 백엔드란?")
st.image(Image.open("image_4.png"), use_column_width=True) # 파일 이름 변경: 그림_4.jpg -> image_4.jpg
st.markdown("""
웹 개발은 크게 두 가지 영역으로 나뉩니다.

* **프론트엔드 (Frontend)**: 사용자가 직접 보고 상호작용하는 웹사이트의 화면을 제작하는 부분입니다. HTML, CSS, JavaScript 등의 기술을 사용하여 웹 페이지의 구조, 디자인, 동적인 요소를 만듭니다.
* **백엔드 (Backend)**: 눈에 보이지 않는 곳에서 데이터 저장 및 처리, 서버 로직, 데이터베이스 관리 등을 담당합니다. Python, Java, Node.js 등 다양한 언어와 프레임워크가 사용됩니다.
""")

st.markdown("---") # 구분선

# 3. 웹 페이지 개발에서 인공지능의 역할
st.header("3. 웹 페이지 개발에서 인공지능의 역할")
st.image(Image.open("image_7.png"), use_column_width=True) # 파일 이름 변경: 그림_7.jpg -> image_7.jpg
st.markdown("""
인공지능(AI)은 웹 페이지 개발의 다양한 영역에서 활용되고 있습니다.

* **정보 요약**: 긴 텍스트 콘텐츠를 AI가 자동으로 요약하여 사용자에게 핵심 정보를 빠르게 제공합니다.
* **카테고리 분류**: 방대한 데이터를 AI가 자동으로 분석하여 적절한 카테고리로 분류함으로써 효율적인 정보 관리를 돕습니다.
* **AI 챗봇**: 고객 문의에 자동으로 응답하거나, 사용자에게 맞춤형 정보를 제공하여 웹사이트의 상호작용성을 높입니다.
""")
